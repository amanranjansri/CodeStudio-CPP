
Node* kReverse(Node* head, int k) {
    // base case
    if(head == NULL)
    {
        return NULL;
    }

    //1st stage reverse k element

    Node* forward = NULL;
    Node* curr = head;
    Node* prev = NULL;
    int count = 0;

    while(curr != NULL && count < k)
    {
        forward = curr -> next;
        curr -> next = prev;
        prev = curr;
        curr = forward;
        count++;
    }

    //2nd stage recursive call rest of element

    if(forward != NULL)
    {
        head -> next = kReverse(forward, k);
    }

    //final stage 

    return prev;
    //19-feb-2023
}
